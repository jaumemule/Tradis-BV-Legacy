[supervisord]

[program:director_worker]

; The important part here is the nodaemon=true, which instructs supervisor to start in the foreground instead of as a service.
; This lets Docker to manage its lifecycle.
nodaemon=true

command=bin/build.sh
process_name=%(program_name)s-%(process_num)s
numprocs=2
directory=.
stopsignal=TERM
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; Set Celery priority higher than default (999)
priority=500

log_stdout=true             ; if true, log program stdout (default true)
log_stderr=true             ; if true, log program stderr (default false)
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true

; More in:
; https://advancedweb.hu/supervisor-with-docker-lessons-learned/